# ------------------------------------
#   欢迎您使用阿里云函数计算 FC 组件进行项目开发
#   组件仓库地址：https://github.com/devsapp/fc
#   组件帮助文档：https://www.serverless-devs.com/fc/readme
#   Yaml参考文档：https://www.serverless-devs.com/fc/yaml/readme
#   关于：
#      - Serverless Devs和FC组件的关系、如何声明/部署多个函数、超过50M的代码包如何部署
#      - 关于.fcignore使用方法、工具中.s目录是做什么、函数进行build操作之后如何处理build的产物
#   等问题，可以参考文档：https://www.serverless-devs.com/fc/tips
#   关于如何做CICD等问题，可以参考：https://www.serverless-devs.com/serverless-devs/cicd
#   关于如何进行环境划分等问题，可以参考：https://www.serverless-devs.com/serverless-devs/extend
#   更多函数计算案例，可参考：https://github.com/devsapp/awesome/
#   有问题快来钉钉群问一下吧：33947367
# ------------------------------------

edition: 1.0.0
name: HttpPanoramicPageRecording-kidt
# access 是当前应用所需要的密钥信息配置：
# 密钥配置可以参考：https://www.serverless-devs.com/serverless-devs/command/config
# 密钥使用顺序可以参考：https://www.serverless-devs.com/serverless-devs/tool#密钥使用顺序与规范
access: "default"

vars: # 全局变量
  region: "cn-hangzhou"
  service:
    name: "browser_video_recorder-kidt"
    role: "acs:ram::1783951278588248:role/aliyunfcdefaultrole"
    description: 'Record a video for chrome browser'
    internetAccess: true
  functionName: "recoder"

services:
  browser_video_recorder_project: # 业务名称/模块名称
    component: fc # 组件名称，Serverless Devs 工具本身类似于一种游戏机，不具备具体的业务能力，组件类似于游戏卡，用户通过向游戏机中插入不同的游戏卡实现不同的功能，即通过使用不同的组件实现不同的具体业务能力
    actions:
      pre-deploy:
        - component: fc build --use-docker --dockerfile ./code/Dockerfile
      post-deploy:
        - component: fc api UpdateFunction --region ${vars.region} --header
            '{"x-fc-disable-container-reuse":"True"}' --path
            '{"serviceName":"${vars.service.name}","functionName":"${vars.functionName}"}'
    props:
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: ${vars.functionName}
        runtime: custom-container
        memorySize: 8192
        instanceType: c1
        timeout: 7200
        customContainerConfig:
          image: "registry-vpc.cn-hangzhou.aliyuncs.com/free_dev/start-recorder:1"
        environmentVariables:
          OSS_BUCKET: "bbs-hunts"
          OSS_ENDPOINT: oss-${vars.region}-internal.aliyuncs.com
          TZ: "Asia/Shanghai"
        asyncConfiguration:
          destination:
            # onSuccess: acs:fc:::services/${vars.service.name}/functions/dest-succ
            onFailure: acs:fc:::services/${vars.service.name}/functions/dest-fail
          maxAsyncEventAgeInSeconds: 18000
          maxAsyncRetryAttempts: 0
          statefulInvocation: true
      triggers:
        - name: httpTrigger
          type: http
          config:
            authType: anonymous
            methods:
              - POST
  dest-succ: # 业务名称/模块名称
    component: fc
    props: #  组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: dest-succ
        description: 'async task destination success function by serverless devs'
        runtime: python3
        codeUri: ./dest/succ
        handler: index.handler
        memorySize: 512
        timeout: 60

  dest-fail: # 业务名称/模块名称
    component: fc
    props: #  组件的属性值
      region: ${vars.region}
      service: ${vars.service}
      function:
        name: dest-fail
        description: 'async task destination fail function by serverless devs'
        runtime: python3
        codeUri: ./dest/fail
        handler: index.handler
        memorySize: 512
        timeout: 60
